name: deploy-web-client
on:
  push:
    paths:
      - 'clients/web/**'
      - '.github/workflows/deploy-webapp.yml'
    branches:
      - main
jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out code.
        uses: actions/checkout@v3.0.2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Yarn Install
        run: |
          yarn install --immutable
      - name: Production Build
        working-directory: clients/web
        run: |
          yarn build:staging
      - name: Export AWS role
        run: |
          echo "DEPLOYMENT_ROLE=$(yarn dlx -q ts-node ./scripts/print-aws-role.ts --environment staging --service webapp)" >> $GITHUB_ENV
      - name: Configure AWS credentials from staging account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.DEPLOYMENT_ROLE }}
          aws-region: eu-central-1
      - name: Deploy to S3
        working-directory: clients/web
        run: |
          aws s3 sync ./build s3://volca-staging-webapp-hosting-bucket --delete
      - name: Invalidate cache
        working-directory: clients/web
        run: |
          aws cloudfront create-invalidation --distribution-id E1VT76P50RM0HL --paths "/*"
  deploy-production:
    needs:
      - deploy-staging
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out code.
        uses: actions/checkout@v3.0.2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Yarn Install
        run: |
          yarn install --immutable
      - name: Production Build
        working-directory: clients/web
        run: |
          yarn build:production
      - name: Export AWS role
        run: |
          echo "DEPLOYMENT_ROLE=$(yarn dlx -q ts-node ./scripts/print-aws-role.ts --environment production --service webapp)" >> $GITHUB_ENV
      - name: Configure AWS credentials from production account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.DEPLOYMENT_ROLE }}
          aws-region: eu-central-1
      - name: Deploy to S3
        working-directory: clients/web
        run: |
          aws s3 sync ./build s3://volca-production-webapp-hosting-bucket --delete
      - name: Invalidate cache
        working-directory: clients/web
        run: |
          aws cloudfront create-invalidation --distribution-id EQDWC9RZWT46L --paths "/*"
