name: deploy-web-client
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v3.1.0
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Yarn Install
        run: |
          yarn install --immutable
      - name: Read workflow vars
        run: |
          yarn dlx -q ts-node ./scripts/get-workflow-vars.ts --environment ${{ inputs.environment }} >> $GITHUB_ENV
      - name: Build
        working-directory: clients/web
        run: |
          yarn build:${{ inputs.environment }}
      - name: Configure AWS credentials from ${{ inputs.environment }} account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/${{ env.APPLICATION_NAME }}-${{ inputs.environment }}-github-actions-webapp-deployment-role
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy to S3
        working-directory: clients/web
        run: |
          aws s3 sync ./build s3://${{ env.APPLICATION_NAME }}-${{ inputs.environment }}-webapp-hosting-bucket --delete
      - name: Invalidate cache
        working-directory: clients/web
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[*].{id:Id,origin:Origins.Items[0].DomainName}[?starts_with(origin, '${{ env.APPLICATION_NAME }}-${{ inputs.environment }}')].id" --output text)
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
